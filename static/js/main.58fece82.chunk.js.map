{"version":3,"sources":["components/Error/Error.js","components/BarChart/BarChart.js","components/ScatterplotGraph/ScatterplotGraph.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Error","props","className","message","BarChart","state","GDP","error","getData","bind","updateChart","updateScales","handleMouseOverBar","handleMouseOutBar","this","d3","then","data","map","item","setState","linearScale","domain","range","height","rawDates","d","dates","Date","barWidth","width","length","catch","margin","scaledGDP","viz","selectAll","transition","duration","animDuration","attr","i","xScale","select","call","scale","yScale","xMax","setMonth","getMonth","e","tooltip","bar","target","gdp","parseFloat","date","bounds","getBoundingClientRect","left","x","baseVal","value","top","y","style","html","toFixed","replace","bars","key","onMouseOver","onMouseOut","id","ref","transform","href","rel","React","Component","defaultProps","ScatterplotGraph","err","dotRadius","legendSide","updateLegend","handleMouseOutDot","handleMouseOverDot","processedData","obj","parsedTime","Time","split","color","cor","tickFormat","Year","toISOString","Name","Doping","Nationality","legend","text","dot","cx","cy","name","doping","year","time","country","dots","r","dy","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58fece82.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Error.css';\r\n\r\nconst Error = (props) => {\r\n    return (\r\n        <div className='Error'>\r\n            <div>{ props.message }</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport './BarChart.css';\r\nimport * as d3 from 'd3';\r\nimport Error from '../Error/Error';\r\n\r\nclass BarChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            GDP: null,\r\n            error: null\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n        this.updateChart = this.updateChart.bind(this);\r\n        this.updateScales = this.updateScales.bind(this);\r\n        this.handleMouseOverBar = this.handleMouseOverBar.bind(this);\r\n        this.handleMouseOutBar = this.handleMouseOutBar.bind(this);\r\n\r\n        this.getData();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateChart();\r\n    }\r\n\r\n    getData() {\r\n        d3.json('https://raw.githubusercontent.com/FreeCodeCamp/ProjectReferenceData/master/GDP-data.json')\r\n            .then((data) => {\r\n                const GDP = data.data.map(item => item[1]);\r\n\r\n                this.setState({\r\n                    linearScale: d3.scaleLinear()\r\n                        .domain([0, d3.max(GDP) + 1000])\r\n                        .range([0, this.props.height]),\r\n                    rawDates: data.data.map(d => d[0]),\r\n                    dates: data.data.map(d => new Date(d[0])),\r\n                    GDP,\r\n                    barWidth: this.props.width / GDP.length,\r\n                });\r\n\r\n                this.updateChart();\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n    }\r\n\r\n    updateChart() {\r\n        if (this.state.error || !this.state.GDP) return;\r\n\r\n        const { dates, GDP, barWidth, rawDates } = this.state;\r\n        const { height, margin } = this.props;\r\n\r\n        this.updateScales();\r\n\r\n        const scaledGDP = GDP.map(item => this.state.linearScale(item));\r\n\r\n        d3.select(this.viz)\r\n            .selectAll('.bar')\r\n            .data(scaledGDP)\r\n            .transition().duration(this.props.animDuration)\r\n            .attr('x', (d, i) => this.state.xScale(dates[i]) + margin)\r\n            .attr('y', (d, i) => height - d)\r\n            .attr('width', barWidth)\r\n            .attr('height', d => d)\r\n            .attr('data-date', (d, i) => rawDates[i])\r\n            .attr('data-gdp', (d, i) => GDP[i]);\r\n\r\n        d3.select(this.viz)\r\n            .select('#x-axis')\r\n            .call(d3.axisBottom().scale(this.state.xScale));\r\n\r\n        d3.select(this.viz)\r\n            .select('#y-axis')\r\n            .call(d3.axisLeft(this.state.yScale));\r\n\r\n    }\r\n\r\n    updateScales() {\r\n        const { dates, GDP } = this.state;\r\n        const { width, height } = this.props;\r\n\r\n        let xMax = new Date(d3.max(dates));\r\n        xMax.setMonth(xMax.getMonth() + 3);\r\n\r\n        const xScale = d3.scaleTime()\r\n            .domain([d3.min(dates), xMax])\r\n            .range([0, width]);\r\n\r\n        const yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(GDP) + 1000])\r\n            .range([height, 0]);\r\n\r\n        this.setState({xScale, yScale});\r\n    }\r\n\r\n    handleMouseOverBar(e) {\r\n        const tooltip = d3.select('#tooltip');\r\n        const bar = d3.select(e.target);\r\n        const gdp = parseFloat(bar.attr('data-gdp'));\r\n        const date = bar.attr('data-date');\r\n        const bounds = this.viz.getBoundingClientRect();\r\n        const left = bounds.x + e.target.x.baseVal.value;\r\n        const top = bounds.y + bounds.height - 2 * this.props.margin;\r\n\r\n        tooltip.transition()\r\n            .duration(200)\r\n            .style('opacity', 1);\r\n\r\n        tooltip.html(`${ date } <br> $ ${ gdp.toFixed(1).replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,') } Billion`)\r\n            .attr('data-date', date)\r\n            .style('left', `${ left + 10 }px`)\r\n            .style('top', `${ top }px`);\r\n    }\r\n\r\n    handleMouseOutBar(e) {\r\n        d3.select('#tooltip')\r\n            .transition()\r\n            .duration(200)\r\n            .style('opacity', 0);\r\n    }\r\n\r\n    render() {\r\n        const { error, GDP, barWidth } = this.state;\r\n        const { width, height, margin } = this.props;\r\n\r\n        const bars = GDP \r\n            ? GDP.map((d, i) => (<rect key={`bar${i}`} className='bar' \r\n                onMouseOver={ this.handleMouseOverBar } onMouseOut={ this.handleMouseOutBar } \r\n                y={ height } x={ margin + i * barWidth } />)) \r\n            : [];\r\n\r\n        return (\r\n            <div className='main bar-chart'>\r\n                <div className='container'>\r\n                    { error \r\n                    ? <Error message={ error.message } /> \r\n                    : <div className='graph'>\r\n                        <div id='title'>United States GDP</div>\r\n                            <div id='tooltip' />\r\n                            <svg ref={ viz => (this.viz = viz) } width={ width + 100 } height={ height + margin }>\r\n                                <text transform={ 'rotate(-90)' } x={ -200 } y={ 80 }>\r\n                                    Gross Domestic Product\r\n                                </text>\r\n                                <text x={ width - margin - 20 } y={ height + 50 }>\r\n                                    <a href='http://www.bea.gov/national/pdf/nipaguid.pdf' target='_blank' rel='noopener noreferrer'>\r\n                                        More Information...\r\n                                    </a>\r\n                                </text>\r\n                                <g id='x-axis' transform={ `translate(${margin}, ${height})` } />\r\n                                <g id='y-axis' transform={ `translate(${margin}, 0)` } />\r\n                                { bars }\r\n                            </svg>\r\n                        </div> \r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nBarChart.defaultProps = {\r\n    animDuration: 800,\r\n    height: 400,\r\n    width: 800,\r\n    margin: 60\r\n};\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport './ScatterplotGraph.css';\r\nimport * as d3 from 'd3';\r\nimport Error from '../Error/Error';\r\n\r\nclass ScatterplotGraph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            err: null,\r\n            data: null,\r\n            dotRadius: 6,\r\n            legendSide: 18\r\n        };\r\n\r\n        this.getData = this.getData.bind(this);\r\n        this.updateChart = this.updateChart.bind(this);\r\n        this.updateScales = this.updateScales.bind(this);\r\n        this.updateLegend = this.updateLegend.bind(this);\r\n        this.handleMouseOutDot = this.handleMouseOutDot.bind(this);\r\n        this.handleMouseOverDot = this.handleMouseOverDot.bind(this);\r\n\r\n        this.getData();\r\n    }\r\n\r\n    getData() {\r\n        d3.json('https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json')\r\n            .then(data => {\r\n                const processedData = data.map(obj => {\r\n                    const parsedTime = obj.Time.split(':');\r\n                    return {\r\n                        ...obj,\r\n                        Time: new Date(1970, 0, 1, 0, parsedTime[0], parsedTime[1])\r\n                    };\r\n                });\r\n\r\n                this.setState({ data: processedData });\r\n\r\n                this.updateChart();\r\n            })\r\n            .catch(err => {\r\n                this.setState({ err });\r\n            })\r\n    }\r\n\r\n    updateChart() {\r\n        if (this.state.err || !this.state.data) return;\r\n\r\n        this.updateScales();\r\n\r\n        const { data, xScale, yScale, color, dotRadius } = this.state;\r\n        const { margin, cor } = this.props;\r\n\r\n        d3.select(this.viz)\r\n            .select('#x-axis')\r\n            .call(d3.axisBottom(xScale).tickFormat(d3.format('d')));\r\n\r\n\r\n        d3.select(this.viz)\r\n            .select('#y-axis')\r\n            .call(d3.axisLeft(yScale).tickFormat(d3.timeFormat('%M:%S')));\r\n        \r\n        d3.select(this.viz)\r\n            .selectAll('.dot')\r\n            .data(data)\r\n            .transition().duration(this.props.animDuration)\r\n            .attr('cx', d => xScale(d.Year) + margin)\r\n            .attr('cy', d => yScale(d.Time) + cor)\r\n            .attr('r', dotRadius)\r\n            .attr('data-xvalue', d => d.Year)\r\n            .attr('data-yvalue', d => d.Time.toISOString())\r\n            .attr('data-name', d => d.Name)\r\n            .attr('data-doping', d => d.Doping)\r\n            .attr('data-country', d => d.Nationality)\r\n            .style('fill', d => color(d.Doping !== ''));\r\n\r\n        this.updateLegend();\r\n    }\r\n\r\n    updateScales() {\r\n        const { data } = this.state;\r\n        const { width, height } = this.props;\r\n\r\n        const xScale = d3.scaleLinear()\r\n            .domain([d3.min(data, d => d.Year - 1),\r\n                    d3.max(data, d => d.Year + 1)])\r\n            .range([0, width]);\r\n\r\n        const yScale = d3.scaleTime()\r\n            .domain(d3.extent(data, d => d.Time))\r\n            .range([0, height]);\r\n\r\n        const color = d3.scaleOrdinal(d3.schemeDark2);\r\n\r\n        this.setState({ xScale, yScale, color });\r\n    }\r\n\r\n    updateLegend() {\r\n        const { color } = this.state;\r\n\r\n        const legend = d3.selectAll('.legend')\r\n            .data(color.domain());\r\n        \r\n        legend\r\n            .select('rect')\r\n            .style('fill', color);\r\n\r\n        legend\r\n            .select('text')\r\n            .text(d => d ? 'Riders with doping allegations' : 'No doping allegations');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateChart();\r\n    }\r\n\r\n    handleMouseOverDot(e) {\r\n        const tooltip = d3.select('#tooltip');\r\n        const dot = d3.select(e.target);\r\n\r\n        const bounds = this.viz.getBoundingClientRect();\r\n        const left = bounds.x + e.target.cx.baseVal.value;\r\n        const top = bounds.y + e.target.cy.baseVal.value;\r\n\r\n        const name = dot.attr('data-name');\r\n        const doping = dot.attr('data-doping');\r\n        const year = dot.attr('data-xvalue');\r\n        const time = d3.timeFormat('%M:%S')(new Date(dot.attr('data-yvalue')));\r\n        const country = dot.attr('data-country');\r\n\r\n        tooltip.transition()\r\n            .duration(200)\r\n            .style('opacity', 1);\r\n\r\n        tooltip.html(`${ name }: ${ country } <br> Year: ${ year }, Time: ${ time } <br> <br> ${ doping }`)\r\n            .attr('data-year', year)\r\n            .style('left', `${ left }px`)\r\n            .style('top', `${ top }px`);\r\n    }\r\n\r\n    handleMouseOutDot(e) {\r\n        d3.select('#tooltip')\r\n            .transition()\r\n            .duration(200)\r\n            .style('opacity', 0);\r\n    }\r\n\r\n    render() {\r\n        const { err, data, dotRadius, legendSide } = this.state;\r\n        const { width, height, margin, cor } = this.props;\r\n\r\n        const dots = data \r\n            ? data.map((d, i) => (<circle key={`circle${i}`}  className='dot'\r\n                onMouseOver={ this.handleMouseOverDot } onMouseOut={ this.handleMouseOutDot } \r\n                cy={ height } cx={ margin } r={ dotRadius } />)) \r\n            : [];\r\n        \r\n        const legend = [0, 1].map((d, i) => \r\n                (<g className='legend' key={`legend${i}`} transform={ `translate(0, ${ height / 2 - i * 20 } )`}>\r\n                    <text x={ width + margin - legendSide * 1.5 } y={ legendSide / 2 } dy={'.35em'} />\r\n                    <rect x={ width + margin - legendSide } width={ legendSide } height={ legendSide } />\r\n                </g>));\r\n\r\n        return (\r\n            <div className='main scatterplot'>\r\n                <div className='container'>\r\n                    { err \r\n                    ? <Error message={err.message} />\r\n                    : <div className='graph'>\r\n                        <div id='title'>Doping in Professional Bicycle Racing</div>\r\n                        <div id='tooltip' />\r\n                        <svg ref={ viz => (this.viz = viz) } width={ width + margin * 2 } height={ height + margin + cor }>\r\n                            <g id='x-axis' transform={ `translate(${ margin }, ${ height + cor })` } />\r\n                            <g id='y-axis' transform={ `translate(${ margin }, ${ cor })` } />\r\n                            <g id='legend'>\r\n                                { legend }\r\n                            </g>\r\n                            { dots }\r\n                        </svg>\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nScatterplotGraph.defaultProps = {\r\n    animDuration: 800,\r\n    height: 420,\r\n    width: 800,\r\n    margin: 60,\r\n    cor: 20\r\n};\r\n\r\nexport default ScatterplotGraph;","import React from 'react';\nimport './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\n\nimport BarChart from '../BarChart/BarChart';\nimport ScatterplotGraph from '../ScatterplotGraph/ScatterplotGraph';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/bar-chart\" component={BarChart} />\n          <Route path=\"/scatterplot-graph\" component={ScatterplotGraph} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}