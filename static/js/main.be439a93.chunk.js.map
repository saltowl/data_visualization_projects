{"version":3,"sources":["components/Header/Header.js","components/Home/Home.js","components/Error/Error.js","components/BarChart/BarChart.js","components/ScatterplotGraph/ScatterplotGraph.js","components/HeatMap/HeatMap.js","components/ChoroplethMap/ChoroplethMap.js","components/TreeMap/TreeMap.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Home","Error","props","message","BarChart","state","GDP","error","getData","bind","updateChart","updateScales","handleMouseOverBar","handleMouseOutBar","this","d3","then","data","map","item","setState","linearScale","domain","range","height","rawDates","d","dates","Date","barWidth","width","length","catch","margin","scaledGDP","viz","selectAll","transition","duration","animDuration","attr","i","xScale","select","call","scale","yScale","xMax","setMonth","getMonth","e","tooltip","bar","target","gdp","parseFloat","date","bounds","getBoundingClientRect","left","x","baseVal","value","top","y","style","html","toFixed","replace","bars","key","onMouseOver","onMouseOut","id","ref","transform","href","rel","React","Component","defaultProps","ScatterplotGraph","err","dotRadius","legendSide","updateLegend","handleMouseOutDot","handleMouseOverDot","processedData","obj","parsedTime","Time","split","color","cor","tickFormat","Year","toISOString","Name","Doping","Nationality","legend","text","dot","cx","cy","name","doping","year","time","country","dots","r","dy","HeatMap","handleMouseOverCell","handleMouseOutCell","description","minYear","monthlyVariance","maxYear","baseTemperature","mes","colorScale","tickValues","filter","tickSize","month","setUTCMonth","bandwidth","variance","legendColors","legendWidth","Set","minTemp","t","maxTemp","step","colorRange","push","interpolate","legendScale","enter","append","cell","temp","legendHeight","cells","fill","ChoroplethMap","counties","edication","handleMouseOverCounty","handleMouseOutCounty","Promise","all","url","values","education","path","topojson","objects","features","result","fips","bachelorsOrHigher","datum","states","a","b","minEducatedCount","maxEducatedCount","firstLegendVal","unshift","_","perc","county","pageX","pageY","countyId","__data__","percent","area","area_name","geometries","wrap","each","word","words","reverse","line","lineNumber","tspan","_groups","parentNode","x1","x0","pop","join","trim","node","getComputedTextLength","TreeMap","createRoot","modifyData","root","sum","sort","categories","leaves","n","category","index","self","indexOf","tile","size","paddingInner","treemap","y0","y1","legendRectSize","boxOffice","legendLabelWidth","legendLabelHeight","Math","floor","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be439a93.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <nav className=\"nav-bar\">\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            Home\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/bar-chart\" className=\"nav-link\">\r\n            Bar Chart\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/scatterplot-graph\" className=\"nav-link\">\r\n            Scatterplot Graph\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/heat-map\" className=\"nav-link\">\r\n            Heat Map\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/choropleth-map\" className=\"nav-link\">\r\n            Choropleth Map\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/tree-map\" className=\"nav-link\">\r\n            Treemap Diagram\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../../../node_modules/@fortawesome/fontawesome-free/css/all.css';\r\nimport './Home.css';\r\n\r\nconst Home = () => (\r\n  <div className=\"home\">\r\n    <h1>\r\n      Welcome to my <i className=\"fas fa-chart-pie\"></i>ata Visua\r\n      <i className=\"fas fa-chart-line\"></i>zation Pr<i className=\"fas fa-table\"></i>jects\r\n    </h1>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './Error.css';\r\n\r\nconst Error = props => {\r\n  return (\r\n    <div className=\"Error\">\r\n      <div>{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport './BarChart.css';\r\nimport * as d3 from 'd3';\r\nimport Error from '../Error/Error';\r\n\r\nclass BarChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      GDP: null,\r\n      error: null,\r\n    };\r\n\r\n    this.getData = this.getData.bind(this);\r\n    this.updateChart = this.updateChart.bind(this);\r\n    this.updateScales = this.updateScales.bind(this);\r\n    this.handleMouseOverBar = this.handleMouseOverBar.bind(this);\r\n    this.handleMouseOutBar = this.handleMouseOutBar.bind(this);\r\n\r\n    this.getData();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateChart();\r\n  }\r\n\r\n  getData() {\r\n    d3.json(\r\n      'https://raw.githubusercontent.com/FreeCodeCamp/ProjectReferenceData/master/GDP-data.json',\r\n    )\r\n      .then(data => {\r\n        const GDP = data.data.map(item => item[1]);\r\n\r\n        this.setState({\r\n          linearScale: d3\r\n            .scaleLinear()\r\n            .domain([0, d3.max(GDP) + 1000])\r\n            .range([0, this.props.height]),\r\n          rawDates: data.data.map(d => d[0]),\r\n          dates: data.data.map(d => new Date(d[0])),\r\n          GDP,\r\n          barWidth: this.props.width / GDP.length,\r\n        });\r\n\r\n        this.updateChart();\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n  }\r\n\r\n  updateChart() {\r\n    if (this.state.error || !this.state.GDP) return;\r\n\r\n    const { dates, GDP, barWidth, rawDates } = this.state;\r\n    const { height, margin } = this.props;\r\n\r\n    this.updateScales();\r\n\r\n    const scaledGDP = GDP.map(item => this.state.linearScale(item));\r\n\r\n    d3.select(this.viz)\r\n      .selectAll('.bar')\r\n      .data(scaledGDP)\r\n      .transition()\r\n      .duration(this.props.animDuration)\r\n      .attr('x', (d, i) => this.state.xScale(dates[i]) + margin)\r\n      .attr('y', (d, i) => height - d)\r\n      .attr('width', barWidth)\r\n      .attr('height', d => d)\r\n      .attr('data-date', (d, i) => rawDates[i])\r\n      .attr('data-gdp', (d, i) => GDP[i]);\r\n\r\n    d3.select(this.viz)\r\n      .select('#x-axis')\r\n      .call(d3.axisBottom().scale(this.state.xScale));\r\n\r\n    d3.select(this.viz)\r\n      .select('#y-axis')\r\n      .call(d3.axisLeft(this.state.yScale));\r\n  }\r\n\r\n  updateScales() {\r\n    const { dates, GDP } = this.state;\r\n    const { width, height } = this.props;\r\n\r\n    let xMax = new Date(d3.max(dates));\r\n    xMax.setMonth(xMax.getMonth() + 3);\r\n\r\n    const xScale = d3\r\n      .scaleTime()\r\n      .domain([d3.min(dates), xMax])\r\n      .range([0, width]);\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(GDP) + 1000])\r\n      .range([height, 0]);\r\n\r\n    this.setState({ xScale, yScale });\r\n  }\r\n\r\n  handleMouseOverBar(e) {\r\n    const tooltip = d3.select('#tooltip');\r\n    const bar = d3.select(e.target);\r\n    const gdp = parseFloat(bar.attr('data-gdp'));\r\n    const date = bar.attr('data-date');\r\n    const bounds = this.viz.getBoundingClientRect();\r\n    const left = bounds.x + e.target.x.baseVal.value;\r\n    const top = bounds.y + bounds.height - 2 * this.props.margin;\r\n\r\n    tooltip\r\n      .transition()\r\n      .duration(200)\r\n      .style('opacity', 1);\r\n\r\n    tooltip\r\n      .html(\r\n        `${date} <br> $ ${gdp.toFixed(1).replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,')} Billion`,\r\n      )\r\n      .attr('data-date', date)\r\n      .style('left', `${left + 10}px`)\r\n      .style('top', `${top}px`);\r\n  }\r\n\r\n  handleMouseOutBar(e) {\r\n    d3.select('#tooltip')\r\n      .transition()\r\n      .duration(200)\r\n      .style('opacity', 0);\r\n  }\r\n\r\n  render() {\r\n    const { error, GDP, barWidth } = this.state;\r\n    const { width, height, margin } = this.props;\r\n\r\n    const bars = GDP\r\n      ? GDP.map((d, i) => (\r\n          <rect\r\n            key={`bar${i}`}\r\n            className=\"bar\"\r\n            onMouseOver={this.handleMouseOverBar}\r\n            onMouseOut={this.handleMouseOutBar}\r\n            y={height}\r\n            x={margin + i * barWidth}\r\n          />\r\n        ))\r\n      : [];\r\n\r\n    return (\r\n      <div className=\"main bar-chart\">\r\n        <div className=\"container\">\r\n          {error ? (\r\n            <Error message={error.message} />\r\n          ) : (\r\n            <div className=\"graph\">\r\n              <div id=\"title\">United States GDP</div>\r\n              <div id=\"tooltip\" />\r\n              <svg\r\n                ref={viz => (this.viz = viz)}\r\n                width={width + 100}\r\n                height={height + margin}\r\n              >\r\n                <text transform={'rotate(-90)'} x={-200} y={80}>\r\n                  Gross Domestic Product\r\n                </text>\r\n                <text x={width - margin - 20} y={height + 50}>\r\n                  <a\r\n                    href=\"http://www.bea.gov/national/pdf/nipaguid.pdf\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    More Information...\r\n                  </a>\r\n                </text>\r\n                <g id=\"x-axis\" transform={`translate(${margin}, ${height})`} />\r\n                <g id=\"y-axis\" transform={`translate(${margin}, 0)`} />\r\n                {bars}\r\n              </svg>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBarChart.defaultProps = {\r\n  animDuration: 800,\r\n  height: 400,\r\n  width: 800,\r\n  margin: 60,\r\n};\r\n\r\nexport default BarChart;\r\n","import React from 'react';\r\nimport './ScatterplotGraph.css';\r\nimport * as d3 from 'd3';\r\nimport Error from '../Error/Error';\r\n\r\nclass ScatterplotGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      err: null,\r\n      data: null,\r\n      dotRadius: 6,\r\n      legendSide: 18,\r\n    };\r\n\r\n    this.getData = this.getData.bind(this);\r\n    this.updateChart = this.updateChart.bind(this);\r\n    this.updateScales = this.updateScales.bind(this);\r\n    this.updateLegend = this.updateLegend.bind(this);\r\n    this.handleMouseOutDot = this.handleMouseOutDot.bind(this);\r\n    this.handleMouseOverDot = this.handleMouseOverDot.bind(this);\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    d3.json(\r\n      'https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json',\r\n    )\r\n      .then(data => {\r\n        const processedData = data.map(obj => {\r\n          const parsedTime = obj.Time.split(':');\r\n          return {\r\n            ...obj,\r\n            Time: new Date(1970, 0, 1, 0, parsedTime[0], parsedTime[1]),\r\n          };\r\n        });\r\n\r\n        this.setState({ data: processedData });\r\n\r\n        this.updateChart();\r\n      })\r\n      .catch(err => {\r\n        this.setState({ err });\r\n      });\r\n  }\r\n\r\n  updateChart() {\r\n    if (this.state.err || !this.state.data) return;\r\n\r\n    this.updateScales();\r\n\r\n    const { data, xScale, yScale, color, dotRadius } = this.state;\r\n    const { margin, cor } = this.props;\r\n\r\n    d3.select(this.viz)\r\n      .select('#x-axis')\r\n      .call(d3.axisBottom(xScale).tickFormat(d3.format('d')));\r\n\r\n    d3.select(this.viz)\r\n      .select('#y-axis')\r\n      .call(d3.axisLeft(yScale).tickFormat(d3.timeFormat('%M:%S')));\r\n\r\n    d3.select(this.viz)\r\n      .selectAll('.dot')\r\n      .data(data)\r\n      .transition()\r\n      .duration(this.props.animDuration)\r\n      .attr('cx', d => xScale(d.Year) + margin)\r\n      .attr('cy', d => yScale(d.Time) + cor)\r\n      .attr('r', dotRadius)\r\n      .attr('data-xvalue', d => d.Year)\r\n      .attr('data-yvalue', d => d.Time.toISOString())\r\n      .attr('data-name', d => d.Name)\r\n      .attr('data-doping', d => d.Doping)\r\n      .attr('data-country', d => d.Nationality)\r\n      .style('fill', d => color(d.Doping !== ''));\r\n\r\n    this.updateLegend();\r\n  }\r\n\r\n  updateScales() {\r\n    const { data } = this.state;\r\n    const { width, height } = this.props;\r\n\r\n    const xScale = d3\r\n      .scaleLinear()\r\n      .domain([d3.min(data, d => d.Year - 1), d3.max(data, d => d.Year + 1)])\r\n      .range([0, width]);\r\n\r\n    const yScale = d3\r\n      .scaleTime()\r\n      .domain(d3.extent(data, d => d.Time))\r\n      .range([0, height]);\r\n\r\n    const color = d3.scaleOrdinal(d3.schemeDark2);\r\n\r\n    this.setState({ xScale, yScale, color });\r\n  }\r\n\r\n  updateLegend() {\r\n    const { color } = this.state;\r\n\r\n    const legend = d3.selectAll('.legend').data(color.domain());\r\n\r\n    legend.select('rect').style('fill', color);\r\n\r\n    legend\r\n      .select('text')\r\n      .text(d => (d ? 'Riders with doping allegations' : 'No doping allegations'));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateChart();\r\n  }\r\n\r\n  handleMouseOverDot(e) {\r\n    const tooltip = d3.select('#tooltip');\r\n    const dot = d3.select(e.target);\r\n\r\n    const bounds = this.viz.getBoundingClientRect();\r\n    const left = bounds.x + e.target.cx.baseVal.value;\r\n    const top = bounds.y + e.target.cy.baseVal.value;\r\n\r\n    const name = dot.attr('data-name');\r\n    const doping = dot.attr('data-doping');\r\n    const year = dot.attr('data-xvalue');\r\n    const time = d3.timeFormat('%M:%S')(new Date(dot.attr('data-yvalue')));\r\n    const country = dot.attr('data-country');\r\n\r\n    tooltip\r\n      .transition()\r\n      .duration(200)\r\n      .style('opacity', 1);\r\n\r\n    tooltip\r\n      .html(`${name}: ${country} <br> Year: ${year}, Time: ${time} <br> <br> ${doping}`)\r\n      .attr('data-year', year)\r\n      .style('left', `${left}px`)\r\n      .style('top', `${top}px`);\r\n  }\r\n\r\n  handleMouseOutDot(e) {\r\n    d3.select('#tooltip')\r\n      .transition()\r\n      .duration(200)\r\n      .style('opacity', 0);\r\n  }\r\n\r\n  render() {\r\n    const { err, data, dotRadius, legendSide } = this.state;\r\n    const { width, height, margin, cor } = this.props;\r\n\r\n    const dots = data\r\n      ? data.map((d, i) => (\r\n          <circle\r\n            key={`circle${i}`}\r\n            className=\"dot\"\r\n            onMouseOver={this.handleMouseOverDot}\r\n            onMouseOut={this.handleMouseOutDot}\r\n            cy={height}\r\n            cx={margin}\r\n            r={dotRadius}\r\n          />\r\n        ))\r\n      : [];\r\n\r\n    const legend = [0, 1].map((d, i) => (\r\n      <g\r\n        className=\"legend\"\r\n        key={`legend${i}`}\r\n        transform={`translate(0, ${height / 2 - i * 20} )`}\r\n      >\r\n        <text x={width + margin - legendSide * 1.5} y={legendSide / 2} dy={'.35em'} />\r\n        <rect x={width + margin - legendSide} width={legendSide} height={legendSide} />\r\n      </g>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"main scatterplot\">\r\n        <div className=\"container\">\r\n          {err ? (\r\n            <Error message={err.message} />\r\n          ) : (\r\n            <div className=\"graph\">\r\n              <div id=\"title\">Doping in Professional Bicycle Racing</div>\r\n              <div id=\"tooltip\" />\r\n              <svg\r\n                ref={viz => (this.viz = viz)}\r\n                width={width + margin * 2}\r\n                height={height + margin + cor}\r\n              >\r\n                <g id=\"x-axis\" transform={`translate(${margin}, ${height + cor})`} />\r\n                <g id=\"y-axis\" transform={`translate(${margin}, ${cor})`} />\r\n                <g id=\"legend\">{legend}</g>\r\n                {dots}\r\n              </svg>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nScatterplotGraph.defaultProps = {\r\n  animDuration: 800,\r\n  height: 420,\r\n  width: 800,\r\n  margin: 60,\r\n  cor: 20,\r\n};\r\n\r\nexport default ScatterplotGraph;\r\n","import React from 'react';\r\nimport './HeatMap.css';\r\nimport * as d3 from 'd3';\r\nimport Error from '../Error/Error';\r\n\r\nclass HeatMap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getData = this.getData.bind(this);\r\n    this.updateChart = this.updateChart.bind(this);\r\n    this.updateScales = this.updateScales.bind(this);\r\n    this.updateLegend = this.updateLegend.bind(this);\r\n    this.handleMouseOverCell = this.handleMouseOverCell.bind(this);\r\n    this.handleMouseOutCell = this.handleMouseOutCell.bind(this);\r\n\r\n    this.state = {\r\n      err: null,\r\n      data: null,\r\n      description: null,\r\n    };\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    d3.json(\r\n      'https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/global-temperature.json',\r\n    )\r\n      .then(data => {\r\n        const minYear = data.monthlyVariance[0].year;\r\n        const maxYear = data.monthlyVariance[data.monthlyVariance.length - 1].year;\r\n\r\n        this.setState({\r\n          data: data.monthlyVariance,\r\n          baseTemperature: data.baseTemperature,\r\n          description: `${minYear} - ${maxYear}: base temperature ${data.baseTemperature +\r\n            this.props.mes}`,\r\n        });\r\n\r\n        this.updateChart();\r\n      })\r\n      .catch(err => {\r\n        this.setState({ err });\r\n      });\r\n  }\r\n\r\n  updateChart() {\r\n    if (this.state.err || !this.state.data) return;\r\n\r\n    this.updateScales();\r\n\r\n    const { data, baseTemperature, xScale, yScale, colorScale } = this.state;\r\n\r\n    d3.select(this.viz)\r\n      .select('#x-axis')\r\n      .call(\r\n        d3\r\n          .axisBottom(xScale)\r\n          .tickValues(xScale.domain().filter(year => year % 10 === 0))\r\n          .tickSize(10, 1),\r\n      );\r\n\r\n    d3.select(this.viz)\r\n      .select('#y-axis')\r\n      .call(\r\n        d3\r\n          .axisLeft(yScale)\r\n          .tickValues(yScale.domain())\r\n          .tickFormat(month => {\r\n            let date = new Date(0);\r\n            date.setUTCMonth(month);\r\n            return d3.timeFormat('%B')(date);\r\n          })\r\n          .tickSize(10, 1),\r\n      );\r\n\r\n    d3.select(this.viz)\r\n      .selectAll('.cell')\r\n      .data(data)\r\n      .transition()\r\n      .duration(this.props.animDuration)\r\n      .attr('x', d => xScale(d.year))\r\n      .attr('y', d => yScale(d.month - 1))\r\n      .attr('width', xScale.bandwidth())\r\n      .attr('height', d => yScale.bandwidth())\r\n      .attr('fill', d => colorScale(baseTemperature + d.variance))\r\n      .attr('data-month', d => d.month - 1)\r\n      .attr('data-year', d => d.year)\r\n      .attr('data-temp', d => baseTemperature + d.variance);\r\n\r\n    this.updateLegend();\r\n  }\r\n\r\n  updateScales() {\r\n    const { data, baseTemperature } = this.state;\r\n    const { width, height, legendColors, legendWidth } = this.props;\r\n\r\n    const xScale = d3\r\n      .scaleBand()\r\n      .domain(data.map(d => d.year))\r\n      .range([0, width]);\r\n\r\n    const yScale = d3\r\n      .scaleBand()\r\n      .domain([...new Set(data.map(d => d.month - 1))])\r\n      .range([0, height]);\r\n\r\n    const minTemp = baseTemperature + d3.min(data, t => t.variance);\r\n    const maxTemp = baseTemperature + d3.max(data, t => t.variance);\r\n    const step = (maxTemp - minTemp) / (legendColors.length - 1);\r\n    const colorRange = d3.range(minTemp, maxTemp, step);\r\n    colorRange.push(maxTemp);\r\n\r\n    const colorScale = d3\r\n      .scaleLinear()\r\n      .domain(colorRange)\r\n      .range(legendColors)\r\n      .interpolate(d3.interpolateHcl);\r\n\r\n    const legendScale = d3\r\n      .scaleLinear()\r\n      .domain([minTemp, maxTemp])\r\n      .range([0, legendWidth]);\r\n\r\n    this.setState({ xScale, yScale, colorScale, legendScale });\r\n  }\r\n\r\n  updateLegend() {\r\n    const { colorScale, legendScale } = this.state;\r\n    const { legendColors } = this.props;\r\n\r\n    d3.select(this.viz)\r\n      .select('#gradient')\r\n      .selectAll('stop')\r\n      .data(legendColors)\r\n      .enter()\r\n      .append('stop')\r\n      .attr('offset', (d, i) => i / (legendColors.length - 1))\r\n      .attr('stop-color', d => d);\r\n\r\n    d3.select(this.viz)\r\n      .select('#legend-axis')\r\n      .call(\r\n        d3\r\n          .axisBottom(legendScale)\r\n          .tickValues(colorScale.domain())\r\n          .tickFormat(d3.format('.1f')),\r\n      );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateChart();\r\n  }\r\n\r\n  handleMouseOverCell(e) {\r\n    const tooltip = d3.select('#tooltip');\r\n    const cell = d3.select(e.target);\r\n\r\n    const bounds = this.viz.getBoundingClientRect();\r\n    const left = bounds.x + e.target.x.baseVal.value + this.props.margin;\r\n    const top = bounds.y + e.target.y.baseVal.value - e.target.height.baseVal.value * 1.5;\r\n\r\n    const year = cell.attr('data-year');\r\n    const month = d3.timeFormat('%B')(new Date(year, cell.attr('data-month')));\r\n    const temp = parseFloat(cell.attr('data-temp')).toFixed(1);\r\n\r\n    cell\r\n      .transition()\r\n      .duration(10)\r\n      .style('fill-opacity', 0.2);\r\n\r\n    tooltip\r\n      .transition()\r\n      .duration(200)\r\n      .style('opacity', 1);\r\n\r\n    tooltip\r\n      .html(`${year} - ${month} <br> ${temp} ${this.props.mes}`)\r\n      .attr('data-year', year)\r\n      .style('left', `${left}px`)\r\n      .style('top', `${top}px`);\r\n  }\r\n\r\n  handleMouseOutCell(e) {\r\n    d3.select(e.target)\r\n      .transition()\r\n      .duration(500)\r\n      .style('fill-opacity', 1);\r\n\r\n    d3.select('#tooltip')\r\n      .transition()\r\n      .duration(200)\r\n      .style('opacity', 0);\r\n  }\r\n\r\n  render() {\r\n    const { err, data, description } = this.state;\r\n    const { width, height, margin, legendHeight, legendWidth } = this.props;\r\n\r\n    const cells = data\r\n      ? data.map((d, i) => (\r\n          <rect\r\n            className=\"cell\"\r\n            key={`rect${i}`}\r\n            onMouseOver={this.handleMouseOverCell}\r\n            onMouseOut={this.handleMouseOutCell}\r\n          />\r\n        ))\r\n      : [];\r\n\r\n    const legendGradient = 'gradient';\r\n\r\n    return (\r\n      <div className=\"main heatmap\">\r\n        <div className=\"container\">\r\n          {err ? (\r\n            <Error message={err.message} />\r\n          ) : (\r\n            <div className=\"graph\">\r\n              <div id=\"title\">Monthly Global Land-Surface Temperature</div>\r\n              <div id=\"description\">{description}</div>\r\n              <div id=\"tooltip\" />\r\n              <svg\r\n                id=\"svg-graph\"\r\n                ref={viz => (this.viz = viz)}\r\n                width={width + margin}\r\n                height={height + margin + margin / 2}\r\n              >\r\n                <defs>\r\n                  <linearGradient id={legendGradient} />\r\n                </defs>\r\n                <g id=\"x-axis\" transform={`translate(${margin}, ${height})`} fill=\"black\">\r\n                  <text\r\n                    className=\"label\"\r\n                    transform={`translate(${width / 2}, ${margin / 2})`}\r\n                  >\r\n                    Years\r\n                  </text>\r\n                </g>\r\n                <g id=\"y-axis\" transform={`translate(${margin}, 0)`}>\r\n                  <text\r\n                    className=\"label\"\r\n                    transform={`translate(${-margin / 2}, ${(height - margin) /\r\n                      2}) rotate(-90)`}\r\n                  >\r\n                    Months\r\n                  </text>\r\n                </g>\r\n                <g id=\"map\" transform={`translate(${margin}, 0 )`}>\r\n                  {cells}\r\n                </g>\r\n                <g\r\n                  id=\"legend\"\r\n                  transform={`translate(${margin +\r\n                    width / 2 -\r\n                    legendWidth / 2}, ${height + margin})`}\r\n                >\r\n                  <text className=\"label\" transform={`translate(${-40}, ${-5})`}>\r\n                    t {this.props.mes}\r\n                  </text>\r\n                  <rect\r\n                    fill={`url(#${legendGradient})`}\r\n                    transform={`translate(0, ${-legendHeight})`}\r\n                    height={legendHeight}\r\n                    width={legendWidth}\r\n                  />\r\n                  <g id=\"legend-axis\" />\r\n                </g>\r\n              </svg>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeatMap.defaultProps = {\r\n  animDuration: 800,\r\n  height: 400,\r\n  width: 1200,\r\n  legendWidth: 300,\r\n  legendHeight: 20,\r\n  margin: 100,\r\n  mes: '℃',\r\n  legendColors: [\r\n    '#2c7bb6',\r\n    '#00a6ca',\r\n    '#00ccbc',\r\n    '#90eb9d',\r\n    '#ffff8c',\r\n    '#f9d057',\r\n    '#f29e2e',\r\n    '#e76818',\r\n    '#d7191c',\r\n  ],\r\n};\r\n\r\nexport default HeatMap;\r\n","import React from 'react';\r\nimport './ChoroplethMap.css';\r\nimport * as d3 from 'd3';\r\nimport * as topojson from 'topojson-client';\r\nimport Error from '../Error/Error';\r\n\r\nclass ChoroplethMap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      err: null,\r\n      counties: null,\r\n      edication: null,\r\n    };\r\n\r\n    this.getData = this.getData.bind(this);\r\n    this.updateChart = this.updateChart.bind(this);\r\n    this.updateLegend = this.updateLegend.bind(this);\r\n    this.updateScales = this.updateScales.bind(this);\r\n    this.handleMouseOverCounty = this.handleMouseOverCounty.bind(this);\r\n    this.handleMouseOutCounty = this.handleMouseOutCounty.bind(this);\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    const files = [\r\n      'https://raw.githubusercontent.com/no-stack-dub-sack/testable-projects-fcc/master/src/data/choropleth_map/counties.json',\r\n      'https://raw.githubusercontent.com/no-stack-dub-sack/testable-projects-fcc/master/src/data/choropleth_map/for_user_education.json',\r\n    ];\r\n\r\n    Promise.all(files.map(url => d3.json(url)))\r\n      .then(values => {\r\n        this.setState({\r\n          education: values[1],\r\n          counties: values[0],\r\n        });\r\n\r\n        this.updateChart();\r\n      })\r\n      .catch(err => {\r\n        this.setState({ err });\r\n      });\r\n  }\r\n\r\n  updateChart() {\r\n    if (this.state.err || !this.state.counties || !this.state.education) return;\r\n\r\n    this.updateScales();\r\n\r\n    const { counties, education, colorScale } = this.state;\r\n\r\n    const path = d3.geoPath();\r\n\r\n    // counties\r\n    d3.select(this.viz)\r\n      .selectAll('.county')\r\n      .data(topojson.feature(counties, counties.objects.counties).features)\r\n      .attr('d', path)\r\n      .attr('fill', d => {\r\n        const result = education.filter(obj => obj.fips === d.id)[0];\r\n        return result ? colorScale(result.bachelorsOrHigher) : colorScale(0);\r\n      })\r\n      .attr('data-fips', d => d.id)\r\n      .attr('data-education', d => {\r\n        const result = education.filter(obj => obj.fips === d.id)[0];\r\n        return result ? result.bachelorsOrHigher : 0;\r\n      });\r\n\r\n    // states border\r\n    d3.select(this.viz)\r\n      .select('#states')\r\n      .datum(topojson.mesh(counties, counties.objects.states, (a, b) => a !== b))\r\n      .attr('d', path);\r\n\r\n    this.updateLegend();\r\n  }\r\n\r\n  updateScales() {\r\n    const { education } = this.state;\r\n    const { legendWidth, legendColors } = this.props;\r\n\r\n    const minEducatedCount = d3.min(education, obj => obj.bachelorsOrHigher);\r\n    const maxEducatedCount = d3.max(education, obj => obj.bachelorsOrHigher);\r\n    const step = (maxEducatedCount - minEducatedCount) / (legendColors.length - 1);\r\n    const colorRange = d3.range(minEducatedCount, maxEducatedCount, step);\r\n    colorRange.push(maxEducatedCount);\r\n    const firstLegendVal = minEducatedCount - step;\r\n    colorRange.unshift(firstLegendVal);\r\n\r\n    const colorScale = d3\r\n      .scaleLinear()\r\n      .domain(colorRange)\r\n      .range(legendColors)\r\n      .interpolate(d3.interpolateHcl);\r\n\r\n    const legendScale = d3\r\n      .scaleLinear()\r\n      .domain([firstLegendVal, maxEducatedCount])\r\n      .range([0, legendWidth]);\r\n\r\n    this.setState({ colorScale, legendScale });\r\n  }\r\n\r\n  updateLegend() {\r\n    const { colorScale, legendScale } = this.state;\r\n    const { legendColors } = this.props;\r\n\r\n    d3.select(this.viz)\r\n      .select('#gradient')\r\n      .selectAll('stop')\r\n      .data(legendColors)\r\n      .enter()\r\n      .append('stop')\r\n      .attr('offset', (d, i) => i / (legendColors.length - 1))\r\n      .attr('stop-color', d => d);\r\n\r\n    d3.select(this.viz)\r\n      .select('#legend-axis')\r\n      .call(\r\n        d3\r\n          .axisBottom(legendScale)\r\n          .tickValues(\r\n            colorScale\r\n              .domain()\r\n              .filter((_, i) => i !== 0 && i !== colorScale.domain().length - 1),\r\n          )\r\n          .tickFormat(perc => d3.format('.0f')(perc) + '%'),\r\n      );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateChart();\r\n  }\r\n\r\n  handleMouseOverCounty(e) {\r\n    const { education } = this.state;\r\n\r\n    const tooltip = d3.select('#tooltip');\r\n    const county = d3.select(e.target);\r\n\r\n    const left = e.pageX;\r\n    const top = e.pageY;\r\n\r\n    county\r\n      .transition()\r\n      .duration(10)\r\n      .style('fill-opacity', 0.2);\r\n\r\n    tooltip\r\n      .transition()\r\n      .duration(200)\r\n      .style('opacity', 0.9);\r\n\r\n    const countyId = e.target.__data__.id;\r\n    const percent = county.attr('data-education');\r\n    const state = education.filter(obj => obj.fips === countyId)[0].state;\r\n    const area = education.filter(obj => obj.fips === countyId)[0].area_name;\r\n\r\n    tooltip\r\n      .html(`${area}, ${state}: ${percent}%`)\r\n      .style('left', `${left}px`)\r\n      .style('top', `${top}px`)\r\n      .attr('data-education', percent);\r\n  }\r\n\r\n  handleMouseOutCounty(e) {\r\n    d3.select(e.target)\r\n      .transition()\r\n      .duration(300)\r\n      .style('fill-opacity', 1);\r\n\r\n    d3.select('#tooltip')\r\n      .transition()\r\n      .duration(200)\r\n      .style('opacity', 0);\r\n  }\r\n\r\n  render() {\r\n    const { err } = this.state;\r\n    const { width, height, margin, legendHeight, legendWidth } = this.props;\r\n\r\n    const counties = this.state.counties\r\n      ? this.state.counties.objects.counties.geometries.map((d, i) => (\r\n          <path\r\n            className=\"county\"\r\n            key={`county${i}`}\r\n            onMouseOver={this.handleMouseOverCounty}\r\n            onMouseOut={this.handleMouseOutCounty}\r\n          />\r\n        ))\r\n      : [];\r\n\r\n    const legendGradient = 'gradient';\r\n\r\n    return (\r\n      <div className=\"main choroplethmap\">\r\n        <div className=\"container\">\r\n          {err ? (\r\n            <Error message={err.message} />\r\n          ) : (\r\n            <div className=\"graph\">\r\n              <div id=\"title\">United States Educational Attainment</div>\r\n              <div id=\"description\">\r\n                Percentage of adults age 25 and older with a bachelor's degree or higher\r\n                (2010-2014)\r\n              </div>\r\n              <div id=\"tooltip\" />\r\n              <svg ref={viz => (this.viz = viz)} width={width + margin} height={height}>\r\n                <defs>\r\n                  <linearGradient id={legendGradient} />\r\n                </defs>\r\n                <g\r\n                  id=\"legend\"\r\n                  transform={`translate(${(width * 2) / 3 + margin / 2}, ${legendHeight *\r\n                    2})`}\r\n                >\r\n                  <rect\r\n                    fill={`url(#${legendGradient})`}\r\n                    transform={`translate(0, ${-legendHeight})`}\r\n                    height={legendHeight}\r\n                    width={legendWidth}\r\n                  />\r\n                  <g id=\"legend-axis\" />\r\n                </g>\r\n                <g className=\"counties\" transform={`translate(${margin}, 0 )`}>\r\n                  {counties}\r\n                </g>\r\n                <path id=\"states\" transform={`translate(${margin}, 0 )`} />\r\n              </svg>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nChoroplethMap.defaultProps = {\r\n  height: 600,\r\n  width: 960,\r\n  legendWidth: 250,\r\n  legendHeight: 15,\r\n  margin: 100,\r\n  legendColors: [\r\n    '#2c7bb6',\r\n    '#00a6ca',\r\n    '#00ccbc',\r\n    '#90eb9d',\r\n    '#ffff8c',\r\n    '#f9d057',\r\n    '#f29e2e',\r\n    '#e76818',\r\n    '#d7191c',\r\n  ],\r\n};\r\n\r\nexport default ChoroplethMap;\r\n","import React from 'react';\r\nimport './TreeMap.css';\r\nimport * as d3 from 'd3';\r\nimport Error from '../Error/Error';\r\n\r\nconst wrap = text => {\r\n  text.each(function() {\r\n    let text = d3.select(this),\r\n      words = text\r\n        .text()\r\n        .split(/\\s+/)\r\n        .reverse(),\r\n      word,\r\n      line = [],\r\n      lineNumber = 0,\r\n      lineHeight = 1.1,\r\n      x = text.attr('x'),\r\n      y = text.attr('y'),\r\n      dy = 0,\r\n      tspan = text\r\n        .text(null)\r\n        .append('tspan')\r\n        .attr('x', x)\r\n        .attr('y', y)\r\n        .attr('dy', `${dy}em`);\r\n\r\n    const width =\r\n      text._groups[0][0].parentNode.__data__.x1 -\r\n      text._groups[0][0].parentNode.__data__.x0 -\r\n      8;\r\n\r\n    while ((word = words.pop())) {\r\n      line.push(word);\r\n      tspan.text(line.join(' ').trim());\r\n      if (tspan.node().getComputedTextLength() > width) {\r\n        line.pop();\r\n        tspan.text(line.join(' '));\r\n        line = [word];\r\n        tspan = text\r\n          .append('tspan')\r\n          .attr('x', x)\r\n          .attr('y', y)\r\n          .attr('dy', `${++lineNumber * lineHeight + dy}em`)\r\n          .text(word);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nclass TreeMap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      err: null,\r\n    };\r\n\r\n    this.getData = this.getData.bind(this);\r\n    this.createRoot = this.modifyData.bind(this);\r\n    this.updateChart = this.updateChart.bind(this);\r\n    this.updateScales = this.updateScales.bind(this);\r\n    this.updateLegend = this.updateLegend.bind(this);\r\n    this.handleMouseOverCell = this.handleMouseOverCell.bind(this);\r\n    this.handleMouseOutCell = this.handleMouseOutCell.bind(this);\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    d3.json(\r\n      'https://cdn.freecodecamp.org/testable-projects-fcc/data/tree_map/movie-data.json',\r\n    )\r\n      .then(data => {\r\n        this.setState({ data });\r\n        this.modifyData();\r\n        this.updateChart();\r\n      })\r\n      .catch(err => {\r\n        this.setState({ err });\r\n      });\r\n  }\r\n\r\n  modifyData() {\r\n    const { data } = this.state;\r\n\r\n    const root = d3\r\n      .hierarchy(data)\r\n      .sum(d => d.value)\r\n      .sort((a, b) => b.value - a.value);\r\n\r\n    const categories = root\r\n      .leaves()\r\n      .map(n => n.data.category)\r\n      .filter((category, index, self) => self.indexOf(category) === index);\r\n\r\n    this.setState({ root, categories });\r\n  }\r\n\r\n  updateChart() {\r\n    if (this.state.err || !this.state.data || !this.state.root) return;\r\n\r\n    this.updateScales();\r\n\r\n    const { colorScale, root } = this.state;\r\n    const { width, height } = this.props;\r\n\r\n    const treemap = d3\r\n      .treemap()\r\n      .tile(d3.treemapResquarify)\r\n      .size([width, height])\r\n      .paddingInner(1);\r\n\r\n    treemap(root);\r\n\r\n    // cells\r\n    d3.select(this.viz)\r\n      .selectAll('.cell')\r\n      .data(root.leaves())\r\n      .transition()\r\n      .duration(this.props.animDuration)\r\n      .attr('transform', d => `translate(${d.x0}, ${d.y0})`);\r\n\r\n    // tiles\r\n    d3.select(this.viz)\r\n      .selectAll('.tile')\r\n      .data(root.leaves())\r\n      .attr('width', d => d.x1 - d.x0)\r\n      .attr('height', d => d.y1 - d.y0)\r\n      .attr('data-name', d => d.data.name)\r\n      .attr('data-category', d => d.data.category)\r\n      .attr('data-value', d => d.data.value)\r\n      .attr('fill', d => colorScale(d.data.category));\r\n\r\n    // tiles' labels\r\n    d3.select(this.viz)\r\n      .selectAll('.tile-text')\r\n      .data(root.leaves())\r\n      .attr('x', 4)\r\n      .attr('y', 15)\r\n      .text(d => d.data.name)\r\n      .call(wrap);\r\n\r\n    this.updateLegend();\r\n  }\r\n\r\n  updateScales() {\r\n    const colorScale = d3.scaleOrdinal(d3.schemePastel1);\r\n\r\n    this.setState({ colorScale });\r\n  }\r\n\r\n  updateLegend() {\r\n    const { categories, colorScale } = this.state;\r\n    const { legendRectSize } = this.props;\r\n\r\n    d3.select('#legend')\r\n      .selectAll('.legend-item')\r\n      .data(categories)\r\n      .attr('fill', d => colorScale(d))\r\n      .attr('width', legendRectSize)\r\n      .attr('height', legendRectSize);\r\n\r\n    d3.select('#legend')\r\n      .selectAll('.legend-text')\r\n      .data(categories)\r\n      .transition()\r\n      .duration(this.props.animDuration)\r\n      .attr('x', legendRectSize * 1.5)\r\n      .attr('y', (legendRectSize * 2) / 3)\r\n      .text(d => d);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateChart();\r\n  }\r\n\r\n  handleMouseOverCell(e) {\r\n    const tooltip = d3.select('#tooltip');\r\n    const cell = d3.select(e.target);\r\n\r\n    const left = e.pageX;\r\n    const top = e.pageY;\r\n\r\n    const name = cell.attr('data-name');\r\n    const category = cell.attr('data-category');\r\n    const value = cell.attr('data-value');\r\n    const boxOffice = value.replace(/(?=\\B(?:\\d{3})+(?!\\d))/g, ' ');\r\n\r\n    cell\r\n      .transition()\r\n      .duration(10)\r\n      .style('fill-opacity', 0.2);\r\n\r\n    tooltip\r\n      .transition()\r\n      .duration(200)\r\n      .style('opacity', 0.95);\r\n\r\n    tooltip\r\n      .html(\r\n        `<mark>Name:</mark> <b>${name}</b> <br>\r\n            <mark>Category:</mark> <b>${category}</b> <br>\r\n            <mark>Value:</mark> <b>$ ${boxOffice}</b>`,\r\n      )\r\n      .style('left', `${left}px`)\r\n      .style('top', `${top}px`)\r\n      .attr('data-value', value);\r\n  }\r\n\r\n  handleMouseOutCell(e) {\r\n    d3.select(e.target)\r\n      .transition()\r\n      .duration(500)\r\n      .style('fill-opacity', 1);\r\n\r\n    d3.select('#tooltip')\r\n      .transition()\r\n      .duration(200)\r\n      .style('opacity', 0);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      legendWidth,\r\n      legendHeight,\r\n      margin,\r\n      legendRectSize,\r\n      legendLabelWidth,\r\n      legendLabelHeight,\r\n    } = this.props;\r\n    const { err, root, categories } = this.state;\r\n\r\n    const cells = root\r\n      ? root.leaves().map((d, i) => (\r\n          <g className=\"cell\" key={`cell${i}`} x={0} y={0}>\r\n            <rect\r\n              className=\"tile\"\r\n              onMouseOver={this.handleMouseOverCell}\r\n              onMouseOut={this.handleMouseOutCell}\r\n            />\r\n            <text className=\"tile-text\" />\r\n          </g>\r\n        ))\r\n      : [];\r\n\r\n    const legend = categories\r\n      ? categories.map((d, i) => (\r\n          <g\r\n            key={`legendItem${i}`}\r\n            transform={`translate(\r\n                        ${(i % 3) * legendLabelWidth}, \r\n                        ${Math.floor(i / 3) * legendRectSize +\r\n                          legendLabelHeight * Math.floor(i / 3)})`}\r\n          >\r\n            <rect className=\"legend-item\" />\r\n            <text className=\"legend-text\" />\r\n          </g>\r\n        ))\r\n      : [];\r\n\r\n    return (\r\n      <div className=\"main treemap\">\r\n        <div className=\"container\">\r\n          {err ? (\r\n            <Error message={err.message} />\r\n          ) : (\r\n            <div className=\"graph\">\r\n              <div id=\"title\">Movie Sales</div>\r\n              <div id=\"description\">Top 100 Highest Grossing Movies Grouped By Genre</div>\r\n              <svg\r\n                transform={`translate(${margin}, 0)`}\r\n                ref={viz => (this.viz = viz)}\r\n                width={width}\r\n                height={height}\r\n              >\r\n                {cells}\r\n              </svg>\r\n              <svg\r\n                transform={`translate(${margin}, 0)`}\r\n                width={legendWidth}\r\n                height={legendHeight}\r\n              >\r\n                <g\r\n                  id=\"legend\"\r\n                  transform={`translate(${(legendWidth - legendLabelWidth * 3) / 2 +\r\n                    margin}, ${margin})`}\r\n                >\r\n                  {legend}\r\n                </g>\r\n              </svg>\r\n              <div id=\"tooltip\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTreeMap.defaultProps = {\r\n  animDuration: 800,\r\n  height: 850,\r\n  width: 940,\r\n  legendWidth: 940,\r\n  legendHeight: 200,\r\n  legendRectSize: 20,\r\n  legendLabelWidth: 150,\r\n  legendLabelHeight: 30,\r\n  margin: 30,\r\n};\r\n\r\nexport default TreeMap;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Header from '../Header/Header';\r\nimport Home from '../Home/Home';\r\nimport BarChart from '../BarChart/BarChart';\r\nimport ScatterplotGraph from '../ScatterplotGraph/ScatterplotGraph';\r\nimport HeatMap from '../HeatMap/HeatMap';\r\nimport ChoroplethMap from '../ChoroplethMap/ChoroplethMap';\r\nimport TreeMap from '../TreeMap/TreeMap';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/bar-chart\" component={BarChart} />\r\n          <Route path=\"/scatterplot-graph\" component={ScatterplotGraph} />\r\n          <Route path=\"/heat-map\" component={HeatMap} />\r\n          <Route path=\"/choropleth-map\" component={ChoroplethMap} />\r\n          <Route path=\"/tree-map\" component={TreeMap} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}